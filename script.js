// Thu·∫≠t to√°n Fisher-Yates shuffle - ƒë·∫£m b·∫£o ng·∫´u nhi√™n ho√†n to√†n
function shuffleArray(array) {
    const shuffled = [...array];
    for (let i = shuffled.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
    }
    return shuffled;
}

// S·ª≠a l·∫°i h√†m shuffleCards
function shuffleCards() {
    // ƒê·∫£m b·∫£o tarotCards ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o
    if (!tarotCards || tarotCards.length === 0) {
        console.error('tarotCards ch∆∞a ƒë∆∞·ª£c kh·ªüi t·∫°o!');
        return;
    }
    
    // S·ª≠ d·ª•ng thu·∫≠t to√°n Fisher-Yates thay v√¨ sort
    shuffledCards = shuffleArray(tarotCards);
    displayCards();
    
    // Th√™m hi·ªáu ·ª©ng x√°o b√†i
    const shuffleBtn = document.getElementById('shuffleBtn');
    shuffleBtn.textContent = 'üîÑ ƒêang x√°o...';
    shuffleBtn.disabled = true;
    
    setTimeout(() => {
        shuffleBtn.textContent = 'üîÑ X√°o B√†i';
        shuffleBtn.disabled = false;
    }, 1000);
}

function displayCards() {
    const container = document.getElementById('cardsContainer');
    if (!container) {
        console.error('Kh√¥ng t√¨m th·∫•y cardsContainer!');
        return;
    }
    
    container.innerHTML = '';
    
    // Hi·ªÉn th·ªã 7 l√° b√†i ng·∫´u nhi√™n v·ªõi hi·ªáu ·ª©ng
    for (let i = 0; i < 7; i++) {
        const cardElement = createCardElement(i);
        cardElement.style.opacity = '0';
        cardElement.style.transform = 'translateY(20px)';
        container.appendChild(cardElement);
        
        // Hi·ªáu ·ª©ng xu·∫•t hi·ªán t·ª´ng l√°
        setTimeout(() => {
            cardElement.style.transition = 'all 0.3s ease';
            cardElement.style.opacity = '1';
            cardElement.style.transform = 'translateY(0)';
        }, i * 100);
    }
}

function createCardElement(index) {
    // Ki·ªÉm tra index h·ª£p l·ªá
    if (!shuffledCards[index]) {
        console.error(`Kh√¥ng t√¨m th·∫•y card t·∫°i index ${index}`);
        return document.createElement('div');
    }
    
    const card = document.createElement('div');
    card.className = 'card';
    card.setAttribute('data-index', index);
    
    card.innerHTML = `
        <div class="card-inner">
            <div class="card-front">
                üîÆ
            </div>
            <div class="card-back">
                <div class="card-symbol">${shuffledCards[index].symbol}</div>
                <div class="card-name">${shuffledCards[index].namevi}</div>
            </div>
        </div>
    `;
    
    card.addEventListener('click', () => selectCard(index));
    
    return card;
}

// S·ª≠a l·∫°i h√†m kh·ªüi t·∫°o
function initializeCards() {
    // Ki·ªÉm tra d·ªØ li·ªáu tr∆∞·ªõc khi x√°o
    if (!tarotCards || tarotCards.length === 0) {
        console.error('D·ªØ li·ªáu tarotCards kh√¥ng h·ª£p l·ªá!');
        return;
    }
    
    console.log(`ƒê√£ t·∫£i ${tarotCards.length} l√° b√†i`);
    shuffleCards();
}

// Th√™m x·ª≠ l√Ω l·ªói cho c√°c s·ª± ki·ªán
document.addEventListener('DOMContentLoaded', function() {
    try {
        initializeCards();
        
        const shuffleBtn = document.getElementById('shuffleBtn');
        const newReadingBtn = document.getElementById('newReadingBtn');
        
        if (shuffleBtn) {
            shuffleBtn.addEventListener('click', shuffleCards);
        }
        
        if (newReadingBtn) {
            newReadingBtn.addEventListener('click', newReading);
        }
    } catch (error) {
        console.error('L·ªói kh·ªüi t·∫°o:', error);
    }
});

// Th√™m h√†m debug ƒë·ªÉ ki·ªÉm tra
function debugCards() {
    console.log('tarotCards:', tarotCards?.length || 'undefined');
    console.log('shuffledCards:', shuffledCards?.length || 'undefined');
    console.log('Container:', document.getElementById('cardsContainer'));
}
